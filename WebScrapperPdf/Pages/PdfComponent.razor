@page "/pdf"
@using Infrastructuur.Pdfs;
@using PdfSharpCore.Drawing;
@using WebScrapperPdf.Services.Interfaces;
@inject IJSRuntime JS
<h3>Pdf File</h3>
@*<button @onclick="@DownloadPdfFile">Download the pdf</button>*@
<div class="page">
    <div >
        <!--contents and data of pdf file-->
        <EditForm class="form" Model="Pdf.File" OnValidSubmit="HandleValidSubmit">
            <div>
                @foreach (var content in Pdf.File.Content)
                {
                    <p class="btn btn-primary" @onclick="() => DisplayForm(content.Key,nameof(Pdf.File.Content).ToString())">@content.Key</p>
                }
                @foreach (var img in Pdf.File.Images)
                {
                    <p class="btn btn-primary" @onclick="() => DisplayForm(img.Key, nameof(Pdf.File.Images).ToString())">@img.Key</p>
                }
                @foreach (var item in Pdf.File.Content)
                {
                    @if (item.IsClicked)
                    {
                        <div class="border border-dark rounded">
                            <p>@item.Key</p>
                            @*posx*@
                            <p class="text-white bg-black text-center p-2">Axis</p>
                            <div class="form-label-group mb-2">
                                <label>X-axis</label>
                                <InputNumber @bind-Value="@item.PosX" class="w-50 h-25 float-end" />
                                <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => item.PosX)" />
                            </div>

                            @*posy*@
                            <div class="form-label-group mb-2">
                                <label>Y-axis</label>
                                <InputNumber @bind-Value="@item.PosY" class="w-50 h-25 float-end" />
                                <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => item.PosY)" />
                            </div>

                            <p class="text-white bg-black text-center p-2">Size</p>
                            @*width*@
                            <div class="form-label-group mb-2">
                                <label>Width</label>
                                <InputNumber @bind-Value="@item.Width" class="w-50 h-25 float-end" />
                                <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => item.Width)" />
                            </div>

                            @*height*@
                            <div class="form-label-group mb-2">
                                <label>Height</label>
                                <InputNumber @bind-Value="@item.Height" class="w-50 h-25 float-end" />
                                <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => item.Height)" />
                            </div>
                            <p class="text-white bg-black text-center p-2">Transform</p>
                            @*rotateTransform*@
                            <div class="form-label-group mb-2">
                                <label>Rotate</label>
                                <InputNumber @bind-Value="@item.RotateTransForm" class="w-50 h-25 float-end" />
                                <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => item.RotateTransForm)" />
                            </div>
                           
                            @*shear content*@
                            @*shearx*@
                            <div>
                                <label>shearX</label>
                                <InputNumber @bind-Value="@item.ShearX" class="w-50 h-25 float-end" />
                                <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => item.ShearY)" />
                            </div>

                            @*shearY*@
                            <div class="form-label-group mb-2">
                                <label>shearY</label>
                                <InputNumber @bind-Value="@item.ShearY" class="w-50 h-25 float-end" />
                                <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => item.ShearY)" />
                            </div>

                            @*centerX*@
                             <div class="form-label-group mb-2">
                                <label>centerX</label>
                                <InputNumber @bind-Value="@item.CenterX" class="w-50 h-25 float-end" />
                                <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => item.CenterY)" />
                            </div>

                            @*centerY*@
                            <div class="form-label-group mb-2">
                                <label>centerY</label>
                                <InputNumber @bind-Value="@item.CenterY" class="w-50 h-25 float-end" />
                                <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => item.CenterY)" />
                            </div>
                            <p class="text-white bg-black text-center p-2">Font</p>
                            @*fontSize*@
                            <div class="form-label-group mb-2">
                                <label>FontSize</label>
                                <InputNumber step="0.1" @bind-Value="@item.FontSize" class="w-50 h-25 float-end" />
                                <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => item.FontSize)" />
                            </div>
                            @*fontstyle*@
                            <div class="form-label-group mb-2">
                                <label>FontStyle</label>
                                <select @bind="@item.FontStyle" class="w-50 h-25 float-end">
                                    @foreach (var fontStyle in FontStyles)
                                    {
                                        <option value="@fontStyle">@fontStyle</option>
                                    }
                                </select>
                            </div>

                            @*fontFamilies*@
                            <div class="form-label-group mb-2">
                                <label>FontFamilies</label>
                                <select @bind="@item.FontFamily" class="w-50 h-25 float-end">
                                    @foreach (var fontFamily in FontFamilies)
                                    {
                                        <option value="@fontFamily">@fontFamily</option>
                                    }
                                </select>
                            </div>
                            @**XBrushesText*@
                            <div class="form-label-group mb-2">
                                <label>Text Color</label>
                                <select @bind="@item.BrushTextColor" class="w-50 h-25 float-end">
                                    @foreach (var brush in Brushes)
                                    {
                                        <option value="@brush">@brush</option>
                                    }
                                </select>
                            </div>
                            <p class="text-white bg-black text-center p-2">Background</p>
                            @**XBrushesText*@
                            <div class="form-label-group mb-2">
                                <label>Rectangle Color</label>
                                <select @bind="@item.RectangleColor" class="w-50 h-25 float-end">
                                    @foreach (var brush in Brushes)
                                    {
                                        <option value="@brush">@brush</option>
                                    }
                                </select>
                            </div>
                        </div>
                    }
                }
                @if (Pdf.File.Images is not null)
                {
                    @foreach (var img in Pdf.File.Images)
                    {
                        @if (img.IsClicked)
                        {
                            <div class="border border-dark rounded">
                                @*posx*@
                                <p>@img.Key</p>

                                <p class="text-white bg-black text-center p-2">Axis</p>

                                <div class="form-label-group mb-2">
                                        <label>X-axis</label>
                                        <InputNumber @bind-Value="@img.PosX" class="w-50 h-25 float-end" />
                                        <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => img.PosX)" />
                                    </div>

                                    @*posy*@
                                <div class="form-label-group mb-2">
                                        <label>Y-axis</label>
                                        <InputNumber @bind-Value="@img.PosY" class="w-50 h-25 float-end" />
                                        <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => img.PosY)" />
                                    </div>
                                <p class="text-white bg-black text-center p-2">Size</p>
                                    @*height*@
                                <div class="form-label-group mb-2">
                                        <label>Height</label>
                                        <InputNumber @bind-Value="@img.Height" class="w-50 h-25 float-end" />
                                        <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => img.Height)" />
                                    </div>

                                    @*posy*@
                                     <div class="form-label-group mb-2">
                                        <label>Width</label>
                                        <InputNumber @bind-Value="@img.Width" class="w-50 h-25 float-end" />
                                        <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => img.Width)" />
                                    </div>
                                <p class="text-white bg-black text-center p-2">Transform</p>
                                    @*rotateTransform*@
                                <div class="form-label-group mb-2">
                                        <label>Rotate</label>
                                        <InputNumber @bind-Value="@img.RotateTransForm" class="w-50 h-25 float-end" />
                                        <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => img.RotateTransForm)" />
                                    </div>
                             
                                @*shear image*@
                                @*shearx*@
                                <div class="form-label-group mb-2">
                                    <label>shearX</label>
                                    <InputNumber @bind-Value="@img.ShearX" class="w-50 h-25 float-end" />
                                    <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => img.ShearY)" />
                                </div>

                                @*shearY*@
                                <div class="form-label-group mb-2">
                                    <label>shearY</label>
                                    <InputNumber @bind-Value="@img.ShearY" class="w-50 h-25 float-end" />
                                    <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => img.ShearY)" />
                                </div>

                                @*centerX*@
                                <div class="form-label-group mb-2">
                                    <label>centerX</label>
                                    <InputNumber @bind-Value="@img.CenterX" class="w-50 h-25 float-end" />
                                    <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => img.CenterY)" />
                                </div>

                                @*centerY*@
                                  <div class="form-label-group mb-2">
                                    <label>centerY</label>
                                    <InputNumber @bind-Value="@img.CenterY" class="w-50 h-25 float-end" />
                                    <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => img.CenterY)" />
                                </div>
                            </div>
                        }
                    }
                }
            </div>
            <button class="btn w-100 mt-2 mb-2 btn-primary" type="submit">Submit Changes</button>
        </EditForm>

    </div>
    <!--the file-->
    <div>
        <div>
            @if (!string.IsNullOrEmpty(Pdf.File.TheFileBase64))
            {
                <object>
                    <embed id="pdfID" type="text/pdf" src="data:application/pdf;base64,@Pdf.File.TheFileBase64" />
                </object>
            }
            <button @onclick="() => SaveTheFile(Pdf.File.TheFileBase64)">Save</button>
        </div>
    </div>
</div>


@code {


}
